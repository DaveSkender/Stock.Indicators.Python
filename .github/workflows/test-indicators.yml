# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Indicators

on:
  pull_request:
    branches: ["main"]

jobs:
  test:
    name: unit tests
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read
      pull-requests: write

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.12"]
        dotnet-version: ["6.x", "8.x"]

    env:

      # identifying primary configuration so only one reports coverage
      IS_PRIMARY: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12' && matrix.dotnet-version == '8.x' }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          dotnet-quality: "ga"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          cache: "pip"
          python-version: ${{ matrix.python-version }}

      - name: Install requirements
        run: |
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          pip install pytest-cov

      - name: Test indicators
        if: env.IS_PRIMARY == 'false'
        run: pytest -vr A tests

      - name: Test indicators with coverage
        if: env.IS_PRIMARY == 'true'
        run: >
          pytest -vr A tests
          --junitxml=test-results.xml
          --cov=stock_indicators
          --cov-report term
          --cov-report xml:test-coverage.xml

      - name: Setup Node
        uses: actions/setup-node@v4
        if: env.IS_PRIMARY == 'true'
        with:
          node-version: latest

      - name: Convert to TRX
        if: env.IS_PRIMARY == 'true'
        run: |
          npm install jest-junit
          jest-junit convert test-results.xml test-results.trx

      - name: Post test summary
        uses: bibipkins/dotnet-test-reporter@v1.4.1
        if: env.IS_PRIMARY == 'true' && always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-title: ""
          results-path:  test-results.trx
          coverage-path: test-coverage.xml
          coverage-type: cobertura
